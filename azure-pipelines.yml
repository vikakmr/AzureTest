# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- azure-pipelines 

variables:
  # Environment name
  environmentName: 'myVMs'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:  
  - deployment: VMDeploy
    displayName: Deploy to VM
    environment:
      name:  $(environmentName)
      resourceType: VirtualMachine
      tags: mooncakeVM
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Write your commands here
                cp '$(Pipeline.Workspace)/drop/target/javademo.war' /home/caikai/apache-tomcat-9.0.46/webapps/
                pid=`ps -ef  | grep -v grep | grep tomcat | grep java | awk '{print $2}'`;
                if [ -n "$pid" ]; then kill $pid; fi;                
          - task: Bash@3
            inputs:
              filePath: '/home/caikai/apache-tomcat-9.0.46/bin/startup.sh'
